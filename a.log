[0;32m===> Verifying dependencies...
[0m[0;32m===> Analyzing applications...
[0m[0;32m===> Compiling rebar3_ez
[0m[0;32m===> Performing EUnit tests...
[0m/Users/admin/proj/erlang/rebar3_ez/test/rebar3_ez_test.erl:74:<0.155.0>: [0;36m===> Load global config file /Users/admin/.config/rebar3/rebar.config
[0m[0;36m===> 22.3.4.1 satisfies the requirement for minimum OTP version 21
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Compile (apps)
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [plugins]
[0m[0;32m===> Fetching rebar3_ez (from {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                     {branch,"main"}})
[0m[0;36m===> sh info:
	cwd: "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example"
	cmd: git --version

[0m[0;36m===> 	opts: []

[0m[0;36m===> Port Cmd: git --version
Port Opts: [exit_status,
            {line,16384},
            use_stdio,stderr_to_stdout,hide,eof,binary]

[0m[0;36m===> sh info:
	cwd: "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example"
	cmd: git clone  file:///Users/admin/proj/erlang/rebar3_ez .tmp_dir355741359373 -b main --single-branch

[0m[0;36m===> 	opts: [{cd,"/var/folders/9y/tgv80c8n2c76jdqhr2v92_2c0000gn/T"}]

[0m[0;36m===> Port Cmd: git clone  file:///Users/admin/proj/erlang/rebar3_ez .tmp_dir355741359373 -b main --single-branch
Port Opts: [{cd,"/var/folders/9y/tgv80c8n2c76jdqhr2v92_2c0000gn/T"},
            exit_status,
            {line,16384},
            use_stdio,stderr_to_stdout,hide,eof,binary]

[0m[0;36m===> sh info:
	cwd: "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example"
	cmd: rm -rf /Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez

[0m[0;36m===> 	opts: [{use_stdout,false},abort_on_error]

[0m[0;36m===> Port Cmd: rm -rf /Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez
Port Opts: [exit_status,
            {line,16384},
            use_stdio,stderr_to_stdout,hide,eof,binary]

[0m[0;36m===> Moving checkout "/var/folders/9y/tgv80c8n2c76jdqhr2v92_2c0000gn/T/.tmp_dir355741359373" to "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez"
[0m[0;36m===> sh info:
	cwd: "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example"
	cmd: mv /var/folders/9y/tgv80c8n2c76jdqhr2v92_2c0000gn/T/.tmp_dir355741359373 /Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez

[0m[0;36m===> 	opts: [{use_stdout,false},abort_on_error]

[0m[0;36m===> Port Cmd: mv /var/folders/9y/tgv80c8n2c76jdqhr2v92_2c0000gn/T/.tmp_dir355741359373 /Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez
Port Opts: [exit_status,
            {line,16384},
            use_stdio,stderr_to_stdout,hide,eof,binary]

[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Compile (apps)
[0m[0;36m===> Running hooks for compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{pre_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", pre_hooks, compile) -> no hooks defined

[0m[0;36m===> Running hooks for erlc_compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{pre_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", pre_hooks, erlc_compile) -> no hooks defined

[0m[0;36m===> Setting paths to [deps]
[0m[0;32m===> Analyzing applications...
[0m[0;32m===> Compiling rebar3_ez
[0m[0;36m===> compile options: {erl_opts, [debug_info]}.
[0m[0;36m===> files to analyze ["/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez_clean.erl",
                              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez.erl",
                              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez_prv.erl"]
[0m[0;36m===> Starting 3 worker(s)
[0m[0;36m===>      Compiled rebar3_ez.erl
[0m[0;36m===>      Compiled rebar3_ez_clean.erl
[0m[0;36m===>      Compiled rebar3_ez_prv.erl
[0m[0;36m===> Running hooks for erlc_compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{post_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", post_hooks, erlc_compile) -> no hooks defined

[0m[0;36m===> Running hooks for app_compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{pre_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", pre_hooks, app_compile) -> no hooks defined

[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Running hooks for app_compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{post_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", post_hooks, app_compile) -> no hooks defined

[0m[0;36m===> Running hooks for compile in app rebar3_ez (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez) with configuration:
[0m[0;36m===> 	{post_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez", post_hooks, compile) -> no hooks defined

[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Expanded command sequence to be run: [app_discovery,install_deps,lock,eunit]
[0m[0;36m===> Running provider: app_discovery
[0m[0;36m===> Found top-level apps: [ez_example]
	using config: [{src_dirs,["src"]},{lib_dirs,["apps/*","lib/*","."]}]
[0m[0;36m===> Linking _build/default/plugins/rebar3_ez to _build/test/plugins/rebar3_ez
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Compile (apps)
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Not adding provider ez clean from module rebar3_ez_clean because it already exists from module rebar3_ez_clean
[0m[0;36m===> Not adding provider ez compile from module rebar3_ez_prv because it already exists from module rebar3_ez_prv
[0m[0;36m===> Running provider: install_deps
[0m[0;32m===> Verifying dependencies...
[0m[0;36m===> Running provider: lock
[0m[0;36m===> Running provider: eunit
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Compile (apps)
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> Setting paths to [deps]
[0m[0;36m===> Running hooks for compile with configuration:
[0m[0;36m===> 	{pre_hooks, []}.
[0m[0;36m===> run_hooks("/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example", pre_hooks, compile) -> no hooks defined

[0m[0;36m===> Compile (project_apps)
[0m[0;36m===> Running hooks for compile in app ez_example (/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example) with configuration:
[0m[0;36m===> Setting paths to [plugins]
[0m[0;36m===> 	{provider_hooks, [{pre, [{ez,compile}]}]}.
[0m[0;36m===> Running provider: {ez,compile}
[0m[0;31m===> [1mUncaught error in rebar_core. Run with DIAGNOSTIC=1 to see stacktrace or consult rebar3.crashdump
[0m[0m[0;36m===> Uncaught error: function_clause
[0m[0;36m===> Stack trace to the error location:
[{rebar3_ez_prv,tar_ez,
     [[{app_info_t,<<"ez_example">>,
           "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/src/ez_example.app.src",
           undefined,undefined,"1.0","1.0",root,
           [{description,"ez_example"},
            {vsn,"1.0"},
            {applications,[kernel,stdlib]}],
           [kernel,stdlib],
           [],[],
           [default,test],
           {dict,19,16,16,8,80,48,
               {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
               {{[],
                 [[{deps,default}],
                  [{project_plugins,default}],
                  [{plugins,default},
                   {rebar3_ez,
                       {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                           {branch,"main"}}}]],
                 [[caller|command_line],
                  [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,
                   112,114,111,106,47,101,114,108,97,110,103,47,114,101,98,97,
                   114,51,95,101,122,47,95,98,117,105,108,100,47,116,101,115,
                   116,47,108,105,98,47,114,101,98,97,114,51,95,101,122,47,
                   116,101,115,116,47,101,122,95,101,120,97,109,112,108,101,
                   47,95,98,117,105,108,100],
                  [deps_dir,108,105,98]],
                 [[plugins,
                   {rebar3_ez,
                       {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                           {branch,"main"}}}],
                  [provider_hooks,
                   {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                  [ez_opts,{plugins,"plugins"}],
                  [defines],
                  [profiles,
                   {test,
                       [{erl_opts,[{d,'TEST'}]},
                        {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                  [overrides],
                  [erl_opts,{d,'TEST'}],
                  [extra_src_dirs,{"test",[{recursive,false}]}]],
                 [],
                 [[vsn_cache|
                   {dict,0,16,16,8,80,48,
                       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                  [force,48]],
                 [],[],[],
                 [[{plugins,global},rebar3_format]],
                 [],
                 [[task,104,101,108,112]],
                 [],[],
                 [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,
                   112,111,46,104,101,120,46,112,109]],
                 []}}},
           {dict,20,16,16,8,80,48,
               {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
               {{[],
                 [[{deps,default}],
                  [{project_plugins,default}],
                  [{plugins,default},
                   {rebar3_ez,
                       {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                           {branch,"main"}}}]],
                 [[caller|command_line],
                  [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,
                   112,114,111,106,47,101,114,108,97,110,103,47,114,101,98,97,
                   114,51,95,101,122,47,95,98,117,105,108,100,47,116,101,115,
                   116,47,108,105,98,47,114,101,98,97,114,51,95,101,122,47,
                   116,101,115,116,47,101,122,95,101,120,97,109,112,108,101,
                   47,95,98,117,105,108,100],
                  [deps_dir,108,105,98]],
                 [[plugins,
                   {rebar3_ez,
                       {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                           {branch,"main"}}}],
                  [provider_hooks,
                   {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                  [ez_opts,{plugins,"plugins"}],
                  [defines],
                  [profiles,
                   {test,
                       [{erl_opts,[{d,'TEST'}]},
                        {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                  [overrides],
                  [erl_opts,{d,'EUNIT'},{d,'TEST'}],
                  [extra_src_dirs,{"test",[{recursive,false}]}],
                  [erl_first_files]],
                 [],
                 [[vsn_cache|
                   {dict,0,16,16,8,80,48,
                       {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                       {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                  [force,48]],
                 [],[],[],
                 [[{plugins,global},rebar3_format]],
                 [],
                 [[task,104,101,108,112]],
                 [],[],
                 [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,
                   112,111,46,104,101,120,46,112,109]],
                 []}}},
           0,undefined,
           "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example",
           "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example",
           "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example/ebin",
           undefined,false,false,false,undefined,false}],
      undefined,
      {state_t,
          "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example",
          {dict,20,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default}],
                 [{project_plugins,default}],
                 [{plugins,default},
                  {rebar3_ez,
                      {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                          {branch,"main"}}}]],
                [[caller|command_line],
                 [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,112,
                  114,111,106,47,101,114,108,97,110,103,47,114,101,98,97,114,
                  51,95,101,122,47,95,98,117,105,108,100,47,116,101,115,116,
                  47,108,105,98,47,114,101,98,97,114,51,95,101,122,47,116,101,
                  115,116,47,101,122,95,101,120,97,109,112,108,101,47,95,98,
                  117,105,108,100],
                 [deps_dir,108,105,98]],
                [[plugins,
                  {rebar3_ez,
                      {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                          {branch,"main"}}}],
                 [provider_hooks,
                  {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                 [ez_opts,{plugins,"plugins"}],
                 [defines],
                 [profiles,
                  {test,
                      [{erl_opts,[{d,'TEST'}]},
                       {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                 [overrides],
                 [erl_opts,{d,'EUNIT'},{d,'TEST'}],
                 [extra_src_dirs,{"test",[{recursive,false}]}],
                 [erl_first_files]],
                [],
                [[vsn_cache|
                  {dict,0,16,16,8,80,48,
                      {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                      {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                 [force,48]],
                [],[],[],
                [[{plugins,global},rebar3_format]],
                [],
                [[task,104,101,108,112]],
                [],[],
                [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,112,
                  111,46,104,101,120,46,112,109]],
                []}}},
          {dict,3,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],[],[],
                [[all_plugin_deps,
                  "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/ebin",
                  "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/ebin"],
                 [all_deps]],
                [[default,
                  "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/ebin",
                  "/Users/admin/.cache/rebar3/plugins/rebar3_format/ebin",
                  "/Users/admin/.cache/rebar3/plugins/katana_code/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/ssl_verify_fun/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/relx/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/rebar/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/providers/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/getopt/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/eunit_formatters/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/erlware_commons/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/cth_readable/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/cf/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/certifi/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3/bbmustache/ebin",
                  "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3",".",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/kernel-6.5.2.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/stdlib-3.12.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/xmerl-1.3.24/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/wx-1.9/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/tools-3.3.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/tftp-1.0.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/syntax_tools-2.2.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/ssl-9.6.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/ssh-4.9.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/snmp-5.5/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/sasl-3.4.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/runtime_tools-1.14/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/reltool-0.8/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/public_key-1.7.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/parsetools-2.1.8/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/os_mon-2.5.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/odbc-2.12.4/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/observer-2.9.3/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/mnesia-4.16.3/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/megaco-3.18.8.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/jinterface-1.10.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/inets-7.1.3/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/hipe-3.19.3/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/ftp-1.0.4/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/eunit-2.4.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/et-1.6.4/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/erts-10.7.2.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/erl_interface-3.13.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/erl_docgen-0.11/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/eldap-1.2.8/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/edoc-0.11/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/diameter-2.2.3/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/dialyzer-4.1.1/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/debugger-4.2.8/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/crypto-4.6.5/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/compiler-7.5.4/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/common_test-1.18.2/ebin",
                  "/Users/admin/.asdf/installs/erlang/22.3.4.1/lib/asn1-5.0.12/ebin"]],
                [],[],[],[],[],[],[],[],[],[],[]}}},
          {dict,17,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default}],
                 [{project_plugins,default}],
                 [{plugins,default},
                  {rebar3_ez,
                      {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                          {branch,"main"}}}]],
                [[caller|command_line],
                 [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,112,
                  114,111,106,47,101,114,108,97,110,103,47,114,101,98,97,114,
                  51,95,101,122,47,95,98,117,105,108,100,47,116,101,115,116,
                  47,108,105,98,47,114,101,98,97,114,51,95,101,122,47,116,101,
                  115,116,47,101,122,95,101,120,97,109,112,108,101,47,95,98,
                  117,105,108,100],
                 [deps_dir,108,105,98]],
                [[plugins,
                  {rebar3_ez,
                      {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                          {branch,"main"}}}],
                 [provider_hooks,
                  {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                 [ez_opts,{plugins,"plugins"}],
                 [defines],
                 [profiles,
                  {test,
                      [{erl_opts,[{d,'TEST'}]},
                       {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                 [overrides]],
                [],
                [[vsn_cache|
                  {dict,0,16,16,8,80,48,
                      {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                      {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                 [force,48]],
                [],[],[],
                [[{plugins,global},rebar3_format]],
                [],
                [[task,104,101,108,112]],
                [],[],
                [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,112,
                  111,46,104,101,120,46,112,109]],
                []}}},
          "/Users/admin/.erlangInstaller/22.3.4.1/bin/rebar3",[],
          [default,test],
          default,[],
          {[],[]},
          {app_info_t,<<"ez_example">>,
              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/src/ez_example.app.src",
              undefined,undefined,"1.0","1.0",root,
              [{description,"ez_example"},
               {vsn,"1.0"},
               {applications,[kernel,stdlib]}],
              [kernel,stdlib],
              [],[],
              [default,test],
              {dict,19,16,16,8,80,48,
                  {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                  {{[],
                    [[{deps,default}],
                     [{project_plugins,default}],
                     [{plugins,default},
                      {rebar3_ez,
                          {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                              {branch,"main"}}}]],
                    [[caller|command_line],
                     [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,
                      112,114,111,106,47,101,114,108,97,110,103,47,114,101,98,
                      97,114,51,95,101,122,47,95,98,117,105,108,100,47,116,
                      101,115,116,47,108,105,98,47,114,101,98,97,114,51,95,
                      101,122,47,116,101,115,116,47,101,122,95,101,120,97,109,
                      112,108,101,47,95,98,117,105,108,100],
                     [deps_dir,108,105,98]],
                    [[plugins,
                      {rebar3_ez,
                          {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                              {branch,"main"}}}],
                     [provider_hooks,
                      {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                     [ez_opts,{plugins,"plugins"}],
                     [defines],
                     [profiles,
                      {test,
                          [{erl_opts,[{d,'TEST'}]},
                           {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                     [overrides],
                     [erl_opts,{d,'TEST'}],
                     [extra_src_dirs,{"test",[{recursive,false}]}]],
                    [],
                    [[vsn_cache|
                      {dict,0,16,16,8,80,48,
                          {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                          {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],
                            []}}}],
                     [force,48]],
                    [],[],[],
                    [[{plugins,global},rebar3_format]],
                    [],
                    [[task,104,101,108,112]],
                    [],[],
                    [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,
                      112,111,46,104,101,120,46,112,109]],
                    []}}},
              {dict,20,16,16,8,80,48,
                  {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                  {{[],
                    [[{deps,default}],
                     [{project_plugins,default}],
                     [{plugins,default},
                      {rebar3_ez,
                          {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                              {branch,"main"}}}]],
                    [[caller|command_line],
                     [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,47,
                      112,114,111,106,47,101,114,108,97,110,103,47,114,101,98,
                      97,114,51,95,101,122,47,95,98,117,105,108,100,47,116,
                      101,115,116,47,108,105,98,47,114,101,98,97,114,51,95,
                      101,122,47,116,101,115,116,47,101,122,95,101,120,97,109,
                      112,108,101,47,95,98,117,105,108,100],
                     [deps_dir,108,105,98]],
                    [[plugins,
                      {rebar3_ez,
                          {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                              {branch,"main"}}}],
                     [provider_hooks,
                      {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                     [ez_opts,{plugins,"plugins"}],
                     [defines],
                     [profiles,
                      {test,
                          [{erl_opts,[{d,'TEST'}]},
                           {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                     [overrides],
                     [erl_opts,{d,'EUNIT'},{d,'TEST'}],
                     [extra_src_dirs,{"test",[{recursive,false}]}],
                     [erl_first_files]],
                    [],
                    [[vsn_cache|
                      {dict,0,16,16,8,80,48,
                          {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                          {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],
                            []}}}],
                     [force,48]],
                    [],[],[],
                    [[{plugins,global},rebar3_format]],
                    [],
                    [[task,104,101,108,112]],
                    [],[],
                    [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,101,
                      112,111,46,104,101,120,46,112,109]],
                    []}}},
              0,undefined,
              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example",
              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example",
              "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example/ebin",
              undefined,false,false,false,undefined,false},
          [{app_info_t,<<"ez_example">>,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/src/ez_example.app.src",
               undefined,undefined,"1.0","1.0",root,
               [{description,"ez_example"},
                {vsn,"1.0"},
                {applications,[kernel,stdlib]}],
               [kernel,stdlib],
               [],[],
               [default,test],
               {dict,19,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],
                      [{project_plugins,default}],
                      [{plugins,default},
                       {rebar3_ez,
                           {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                               {branch,"main"}}}]],
                     [[caller|command_line],
                      [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,
                       47,112,114,111,106,47,101,114,108,97,110,103,47,114,
                       101,98,97,114,51,95,101,122,47,95,98,117,105,108,100,
                       47,116,101,115,116,47,108,105,98,47,114,101,98,97,114,
                       51,95,101,122,47,116,101,115,116,47,101,122,95,101,120,
                       97,109,112,108,101,47,95,98,117,105,108,100],
                      [deps_dir,108,105,98]],
                     [[plugins,
                       {rebar3_ez,
                           {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                               {branch,"main"}}}],
                      [provider_hooks,
                       {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                      [ez_opts,{plugins,"plugins"}],
                      [defines],
                      [profiles,
                       {test,
                           [{erl_opts,[{d,'TEST'}]},
                            {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                      [overrides],
                      [erl_opts,{d,'TEST'}],
                      [extra_src_dirs,{"test",[{recursive,false}]}]],
                     [],
                     [[vsn_cache|
                       {dict,0,16,16,8,80,48,
                           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],
                             []}}}],
                      [force,48]],
                     [],[],[],
                     [[{plugins,global},rebar3_format]],
                     [],
                     [[task,104,101,108,112]],
                     [],[],
                     [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,
                       101,112,111,46,104,101,120,46,112,109]],
                     []}}},
               {dict,20,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],
                      [{project_plugins,default}],
                      [{plugins,default},
                       {rebar3_ez,
                           {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                               {branch,"main"}}}]],
                     [[caller|command_line],
                      [base_dir,47,85,115,101,114,115,47,97,100,109,105,110,
                       47,112,114,111,106,47,101,114,108,97,110,103,47,114,
                       101,98,97,114,51,95,101,122,47,95,98,117,105,108,100,
                       47,116,101,115,116,47,108,105,98,47,114,101,98,97,114,
                       51,95,101,122,47,116,101,115,116,47,101,122,95,101,120,
                       97,109,112,108,101,47,95,98,117,105,108,100],
                      [deps_dir,108,105,98]],
                     [[plugins,
                       {rebar3_ez,
                           {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                               {branch,"main"}}}],
                      [provider_hooks,
                       {pre,[{clean,{ez,clean}},{compile,{ez,compile}}]}],
                      [ez_opts,{plugins,"plugins"}],
                      [defines],
                      [profiles,
                       {test,
                           [{erl_opts,[{d,'TEST'}]},
                            {extra_src_dirs,[{"test",[{recursive,false}]}]}]}],
                      [overrides],
                      [erl_opts,{d,'EUNIT'},{d,'TEST'}],
                      [extra_src_dirs,{"test",[{recursive,false}]}],
                      [erl_first_files]],
                     [],
                     [[vsn_cache|
                       {dict,0,16,16,8,80,48,
                           {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                           {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],
                             []}}}],
                      [force,48]],
                     [],[],[],
                     [[{plugins,global},rebar3_format]],
                     [],
                     [[task,104,101,108,112]],
                     [],[],
                     [[rebar_packages_cdn,104,116,116,112,115,58,47,47,114,
                       101,112,111,46,104,101,120,46,112,109]],
                     []}}},
               0,undefined,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/test/lib/ez_example/ebin",
               undefined,false,false,false,undefined,false}],
          [],
          [{app_info_t,<<"rebar3_ez">>,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez.app.src",
               undefined,undefined,"0.1.0","0.1.0",root,
               [{description,"A rebar3 plugin for dist app to  *.ez"},
                {vsn,"0.1.0"},
                {registered,[]},
                {applications,[kernel,stdlib]},
                {env,[]},
                {modules,[]},
                {licenses,["Apache 2.0"]},
                {links,[]}],
               [kernel,stdlib],
               [],[],
               [default,prod],
               {dict,5,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,5,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/ebin",
               {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                   {branch,"main"}},
               false,false,false,undefined,true},
           {app_info_t,<<"rebar3_ez">>,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez.app.src",
               undefined,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/ebin/rebar3_ez.app",
               "0.1.0","0.1.0",root,
               [{description,"A rebar3 plugin for dist app to  *.ez"},
                {vsn,"0.1.0"},
                {registered,[]},
                {applications,[kernel,stdlib]},
                {env,[]},
                {modules,[rebar3_ez,rebar3_ez_clean,rebar3_ez_prv]},
                {licenses,["Apache 2.0"]},
                {links,[]}],
               [kernel,stdlib],
               [],[],
               [default,prod],
               {dict,5,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,5,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}]],
                     [],
                     [[erl_opts,debug_info],[deps],[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez",
               undefined,
               {git,"file:///Users/admin/proj/erlang/rebar3_ez",
                   {branch,"main"}},
               false,false,true,undefined,true}],
          [],
          [rebar_compiler_xrl,rebar_compiler_yrl,rebar_compiler_mib,
           rebar_compiler_erl],
          [],
          [{resource,hg,rebar_hg_resource,#{},rebar_resource_v2},
           {resource,pkg,rebar_pkg_resource,
               #{base_config =>
                     #{http_adapter => {r3_hex_http_httpc,#{profile => rebar}},
                       http_user_agent_fragment =>
                           <<"(rebar3/3.14.4) (httpc)">>},
                 repos =>
                     [#{api_key => undefined,api_organization => undefined,
                        api_repository => undefined,
                        api_url => <<"https://hex.pm/api">>,
                        http_adapter =>
                            {r3_hex_http_httpc,#{profile => rebar}},
                        http_etag => undefined,http_headers => #{},
                        http_user_agent_fragment =>
                            <<"(rebar3/3.14.4) (httpc)">>,
                        name => <<"hexpm">>,repo_key => undefined,
                        repo_name => <<"hexpm">>,
                        repo_organization => undefined,
                        repo_public_key =>
                            <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
                        repo_url => <<"https://repo.hex.pm">>,
                        repo_verify => true,repo_verify_origin => true,
                        tarball_max_size => 8388608,
                        tarball_max_uncompressed_size => 67108864}]},
               rebar_resource_v2},
           {resource,git_subdir,rebar_git_subdir_resource,#{},
               rebar_resource_v2},
           {resource,git,rebar_git_resource,#{},rebar_resource_v2}],
          [{provider,compile,rebar3_ez_prv,
               {[],[]},
               true,
               [default,app_discovery],
               "A rebar3 plugin for dist app to  *.ez",
               "A rebar3 plugin for dist app to  *.ez","rebar3 ez compile",[],
               [default],
               ez},
           {provider,clean,rebar3_ez_clean,
               {[],[]},
               true,
               [default,app_discovery],
               "A rebar3 plugin for dist app to  *.ez","clean *.ez",
               "rebar3 ez clean",[],
               [default],
               ez},
           {provider,xref,rebar_prv_xref,
               {[],[]},
               true,
               [compile],
               ["Run cross reference analysis.",10,10,86,97,108,105,100,32,
                114,101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,
                105,111,110,115,58,10,32,32,
                [123,["xref_warnings",44,"false"],125],
                10,32,32,
                [123,["xref_extra_paths",44,"[]"],125],
                10,32,32,
                [123,
                 ["xref_checks",44,
                  [91,
                   ["undefined_function_calls",44,"undefined_functions",44,
                    "locals_not_used",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "exports_not_used",44,"deprecated_function_calls",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "deprecated_functions"],
                   93]],
                 125],
                10,32,32,
                [123,
                 ["xref_queries",44,
                  [91,
                   [[123,
                     ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                      44,10,
                      [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                      "[]"],
                     125]],
                   93]],
                 125],
                10],
               "Run cross reference analysis.","rebar3 xref",[],
               [default],
               default},
           {provider,version,rebar_prv_version,
               {[],[]},
               true,[],"Print version for rebar and current Erlang.",
               "Print version for rebar and current Erlang.","rebar3 version",
               [],
               [default],
               default},
           {provider,upgrade,rebar_prv_upgrade,
               {[],[]},
               true,
               [lock],
               "Upgrade project dependencies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
               "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
               [{package,undefined,undefined,string,
                    "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
               [default],
               default},
           {provider,update,rebar_prv_update,
               {[],[]},
               true,[],"Update package index.","Update package index.",
               "rebar3 update",[],
               [default],
               default},
           {provider,unlock,rebar_prv_unlock,
               {[],[]},
               true,[],
               "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
               "Unlock dependencies.",[],
               [{package,undefined,undefined,string,
                    "List of packages to unlock. If not specified, all dependencies are unlocked."}],
               [default],
               default},
           {provider,tar,rebar_prv_tar,
               {[],[]},
               true,
               [compile],
               "Tar archive of release built of project.",
               "Tar archive of release built of project.","rebar3 tar",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,state,rebar_prv_state,
               {[],[]},
               false,[],"Display rebar configuration for debugging purpose",
               "Print current configuration state","rebar3 state",[],
               [default],
               default},
           {provider,shell,rebar_prv_shell,
               {[],[]},
               true,
               [compile],
               "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
               "Run shell with project apps and deps in path.","rebar3 shell",
               [{config,undefined,"config",string,
                    "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
                {name,undefined,"name",atom,"Gives a long name to the node."},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node."},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed."},
                {script_file,undefined,"script",string,
                    "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
                {apps,undefined,"apps",string,
                    "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."},
                {relname,114,"relname",atom,
                    "Name of the release to use as a template for the shell session"},
                {relvsn,118,"relvsn",string,
                    "Version of the release to use for the shell session"},
                {start_clean,undefined,"start-clean",boolean,
                    "Cancel any applications in the 'apps' list or release."},
                {env_file,undefined,"env-file",string,
                    "Path to file of os environment variables to setup before expanding vars in config files."},
                {user_drv_args,undefined,"user_drv_args",string,
                    "Arguments passed to user_drv start function for creating custom shells."}],
               [default],
               default},
           {provider,repos,rebar_prv_repos,
               {[],[]},
               false,[],
               "Display repository configuration for debugging purpose",
               "Print current package repository configuration",
               "rebar3 repos",[],
               [default],
               default},
           {provider,report,rebar_prv_report,
               {[],[]},
               true,[],
               "Provide a crash report to be sent to the rebar3 issues page.",
               "Provide a crash report to be sent to the rebar3 issues page.",
               "rebar3 report \"<task>\"",
               [{task,undefined,undefined,string,
                    "Task to print details for."}],
               [default],
               default},
           {provider,relup,rebar_prv_relup,
               {[],[]},
               true,
               [release],
               "Create relup of releases.","Create relup of releases.",
               "rebar3 relup",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,release,rebar_prv_release,
               {[],[]},
               true,
               [compile],
               "Build release of project.","Build release of project.",
               "rebar3 release",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,upgrade,rebar_prv_plugins_upgrade,
               {[],[]},
               true,[],"List or upgrade plugins","Upgrade plugins",
               "rebar3 plugins upgrade <plugin>",
               [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
               [default],
               plugins},
           {provider,list,rebar_prv_plugins,
               {[],[]},
               true,[],"List local and global plugins for this project",
               "List local and global plugins for this project",
               "rebar3 plugins list",[],
               [default],
               plugins},
           {provider,path,rebar_prv_path,
               {[],[]},
               true,
               [app_discovery],
               "Print paths to build dirs in current profile.",
               "Print paths to build dirs in current profile.","rebar3 path",
               [{app,undefined,"app",string,
                    "Comma separated list of applications to return paths for."},
                {base,undefined,"base",boolean,
                    "Return the `base' path of the current profile."},
                {bin,undefined,"bin",boolean,
                    "Return the `bin' path of the current profile."},
                {ebin,undefined,"ebin",boolean,
                    "Return all `ebin' paths of the current profile's applications."},
                {lib,undefined,"lib",boolean,
                    "Return the `lib' path of the current profile."},
                {priv,undefined,"priv",boolean,
                    "Return the `priv' path of the current profile's applications."},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {src,undefined,"src",boolean,
                    "Return the `src' path of the current profile's applications."},
                {rel,undefined,"rel",boolean,
                    "Return the `rel' path of the current profile."}],
               [default],
               default},
           {provider,pkgs,rebar_prv_packages,
               {[],[]},
               true,[],
               ["List information for a package",46,10],
               "List information for a package.","rebar3 pkgs elli",
               [{package,undefined,undefined,string,
                    "Package to fetch information for."}],
               [default],
               default},
           {provider,new,rebar_prv_new,
               {[],[]},
               true,[],
               "Create rebar3 project based on template and vars.\n\nValid command line options:\n  <template> [var=foo,...]\n\nSee available templates with: `rebar3 new help`\n",
               "Create new project from templates.","rebar3 new <template>",
               [{force,102,"force",undefined,"overwrite existing files"}],
               [default],
               default},
           {provider,lock,rebar_prv_lock,
               {[],[]},
               false,
               [install_deps],
               "Locks dependencies","Locks dependencies.",[],[],
               [default],
               default},
           {provider,upgrade,rebar_prv_local_upgrade,
               {[],[]},
               true,[],[],"Download latest rebar3 escript and extract.",
               "rebar3 unstable upgrade",[],
               [default],
               local},
           {provider,install,rebar_prv_local_install,
               {[],[]},
               true,[],[],
               "Extract libs from rebar3 escript along with a run script.",
               "rebar3 unstable install",[],
               [default],
               local},
           {provider,install_deps,rebar_prv_install_deps,
               {[],[]},
               false,
               [app_discovery],
               [],[],undefined,[],
               [default],
               default},
           {provider,help,rebar_prv_help,
               {[],[]},
               true,[],
               "Display a list of tasks or help for a given task or subtask.",
               "Display a list of tasks or help for a given task or subtask.",
               "rebar3 help <task>",
               [{help_task,undefined,undefined,string,
                    "Task to print help for."}],
               [default],
               default},
           {provider,'get-deps',rebar_prv_get_deps,
               {[],[]},
               true,
               [lock],
               "Fetch project dependencies.","Fetch dependencies.",
               "rebar3 get-deps",[],[],default},
           {provider,eunit,rebar_prv_eunit,
               {[],[]},
               true,
               [lock],
               "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
               [{app,undefined,"app",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {application,undefined,"application",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {cover,99,"cover",boolean,
                    "Generate cover data. Defaults to false."},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {profile,112,"profile",boolean,
                    "Show the slowest tests. Defaults to false."},
                {dir,100,"dir",string,
                    "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
                {file,102,"file",string,
                    "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
                {module,109,"module",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {suite,115,"suite",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {generator,103,"generator",string,
                    "Comma separated list of generators (the format is `module:function`) to load tests from. Equivalent to `[{generator, Module, Function}]`."},
                {verbose,118,"verbose",boolean,
                    "Verbose output. Defaults to false."},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"}],
               [test],
               default},
           {provider,escriptize,rebar_prv_escriptize,
               {[],[]},
               true,
               [compile],
               "Generate an escript executable containing the project's and its dependencies' BEAM files.",
               "Generate escript archive.","rebar3 escriptize",[],
               [default],
               default},
           {provider,edoc,rebar_prv_edoc,
               {[],[]},
               true,
               [compile],
               "Generate documentation using edoc.",
               "Generate documentation using edoc.","rebar3 edoc",[],
               [docs],
               default},
           {provider,do,rebar_prv_do,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence.",
               "Higher order provider for running multiple tasks in a sequence.",
               "rebar3 do <task1>, <task2>, ...",[],
               [default],
               default},
           {provider,dialyzer,rebar_prv_dialyzer,
               {[],[]},
               true,
               [compile],
               "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies or `all_apps` to include all project apps and nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
               "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
               [{update_plt,117,"update-plt",boolean,
                    "Enable updating the PLT. Default: true"},
                {succ_typings,115,"succ-typings",boolean,
                    "Enable success typing analysis. Default: true"},
                {base_plt_location,undefined,"base-plt-location",string,
                    "The location of base PLT file, defaults to $HOME/.cache/rebar3"},
                {plt_location,undefined,"plt-location",string,
                    "The location of the PLT file, defaults to the profile's base directory"},
                {plt_prefix,undefined,"plt-prefix",string,
                    "The prefix to the PLT file, defaults to \"rebar3\""},
                {app,97,"app",string,
                    "Perform success typing analysis of a single application"},
                {base_plt_prefix,undefined,"base-plt-prefix",string,
                    "The prefix to the base PLT file, defaults to \"rebar3\""},
                {statistics,undefined,"statistics",boolean,
                    "Print information about the progress of execution. Default: false"}],
               [default],
               default},
           {provider,tree,rebar_prv_deps_tree,
               {[],[]},
               true,
               [lock],
               [],"Print dependency tree.","rebar3 tree",
               [{verbose,118,"verbose",undefined,
                    "Print repo and branch/tag/ref for git and hg deps"}],
               [default],
               default},
           {provider,deps,rebar_prv_deps,
               {[],[]},
               true,
               [install_deps],
               "List dependencies. Those not matching the config file are followed by an asterisk (*).",
               "List dependencies","rebar3 deps",[],
               [default],
               default},
           {provider,cover,rebar_prv_cover,
               {[],[]},
               true,
               [lock],
               "Perform coverage analysis.","Perform coverage analysis.",
               "rebar3 cover",
               [{reset,114,"reset",boolean,"Reset all coverdata."},
                {verbose,118,"verbose",boolean,"Print coverage analysis."},
                {min_coverage,109,"min_coverage",integer,
                    "Mandate a coverage percentage required to succeed (0..100)"}],
               [test],
               default},
           {provider,compile,rebar_prv_compile,
               {[],[]},
               true,
               [lock],
               "Compile apps .app.src and .erl files.",
               "Compile apps .app.src and .erl files.","rebar3 compile",
               [{deps_only,100,"deps_only",undefined,
                    "Only compile dependencies, no project apps will be built."}],
               [default],
               default},
           {provider,ct,rebar_prv_common_test,
               {[],[]},
               true,
               [lock],
               "Run Common Tests.","Run Common Tests.","rebar3 ct",
               [{dir,undefined,"dir",string,
                    "List of additional directories containing test suites"},
                {suite,undefined,"suite",string,"List of test suites to run"},
                {group,undefined,"group",string,"List of test groups to run"},
                {testcase,undefined,"case",string,"List of test cases to run"},
                {label,undefined,"label",string,"Test label"},
                {config,undefined,"config",string,"List of config files"},
                {spec,undefined,"spec",string,"List of test specifications"},
                {join_specs,undefined,"join_specs",boolean,
                    "Merge all test specifications and perform a single test run"},
                {allow_user_terms,undefined,"allow_user_terms",boolean,
                    "Allow user defined config values in config files"},
                {logdir,undefined,"logdir",string,"Log folder"},
                {logopts,undefined,"logopts",string,
                    "Options for common test logging"},
                {verbosity,undefined,"verbosity",integer,"Verbosity"},
                {cover,99,"cover",{boolean,false},"Generate cover data"},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {repeat,undefined,"repeat",integer,
                    "How often to repeat tests"},
                {duration,undefined,"duration",string,
                    "Max runtime (format: HHMMSS)"},
                {until,undefined,"until",string,"Run until (format: HHMMSS)"},
                {force_stop,undefined,"force_stop",string,
                    "Force stop on test timeout (true | false | skip_rest)"},
                {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
                {stylesheet,undefined,"stylesheet",string,
                    "CSS stylesheet to apply to html output"},
                {decrypt_key,undefined,"decrypt_key",string,
                    "Path to key for decrypting config"},
                {decrypt_file,undefined,"decrypt_file",string,
                    "Path to file containing key for decrypting config"},
                {abort_if_missing_suites,undefined,"abort_if_missing_suites",
                    {boolean,true},
                    "Abort if suites are missing"},
                {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
                {scale_timetraps,undefined,"scale_timetraps",boolean,
                    "Scale timetraps"},
                {create_priv_dir,undefined,"create_priv_dir",string,
                    "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
                {include,undefined,"include",string,
                    "Directories containing additional include files"},
                {readable,undefined,"readable",string,
                    "Shows test case names and only displays logs to shell on failures (true | compact | false)"},
                {verbose,118,"verbose",boolean,"Verbose output"},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"},
                {sys_config,undefined,"sys_config",string,
                    "List of application config files"},
                {compile_only,undefined,"compile_only",boolean,
                    "Compile modules in the project with the test configuration but do not run the tests"},
                {retry,undefined,"retry",boolean,
                    "Experimental feature. If any specification for previously failing test is found, runs them."},
                {fail_fast,undefined,"fail_fast",
                    {boolean,false},
                    "Experimental feature. If any test fails, the run is aborted. Since common test does not support this natively, we abort the rebar3 run on a failure. This May break CT's disk logging and other rebar3 features."}],
               [test],
               default},
           {provider,clean,rebar_prv_clean,
               {[],[]},
               true,
               [app_discovery,install_deps],
               "Remove compiled beam files from apps.",
               "Remove compiled beam files from apps.","rebar3 clean",
               [{all,97,"all",undefined,"Clean all apps include deps"},
                {apps,undefined,"apps",string,
                    "Clean a specific list of apps or dependencies"},
                {profile,112,"profile",string,
                    "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
               [default],
               default},
           {provider,compile,rebar_prv_bare_compile,
               {[],[]},
               false,
               [{default,app_discovery}],
               [],[],[],
               [{paths,112,"paths",string,
                    "Wildcard paths of ebin directories to add to code path, separated by a colon"},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {outdir,111,"outdir",string,
                    "Path where build artifacts are located. Defaults to the current directory."}],
               [default],
               bare},
           {provider,as,rebar_prv_as,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
               [{profile,undefined,undefined,string,"Profiles to run as."}],
               [default],
               default},
           {provider,app_discovery,rebar_prv_app_discovery,
               {[],[]},
               false,[],[],[],[],[],
               [default],
               default},
           {provider,format,rebar3_format_prv,
               {[],[]},
               true,
               [app_discovery],
               [],"A rebar plugin for code formatting","rebar3 format",
               [{files,102,"files",string,
                    "List of files and directories to be formatted"},
                {verify,118,"verify",boolean,"Just verify, don't format"},
                {output,111,"output",string,
                    "Output directory for the formatted files"}],
               [default],
               default},
           {provider,compile,rebar3_ez_prv,
               {[],[]},
               true,
               [default,app_discovery],
               "A rebar3 plugin for dist app to  *.ez",
               "A rebar3 plugin for dist app to  *.ez","rebar3 ez compile",[],
               [default],
               ez},
           {provider,clean,rebar3_ez_clean,
               {[],[]},
               true,
               [default,app_discovery],
               "A rebar3 plugin for dist app to  *.ez","clean *.ez",
               "rebar3 ez clean",[],
               [default],
               ez},
           {provider,xref,rebar_prv_xref,
               {[],[]},
               true,
               [compile],
               ["Run cross reference analysis.",10,10,86,97,108,105,100,32,
                114,101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,
                105,111,110,115,58,10,32,32,
                [123,["xref_warnings",44,"false"],125],
                10,32,32,
                [123,["xref_extra_paths",44,"[]"],125],
                10,32,32,
                [123,
                 ["xref_checks",44,
                  [91,
                   ["undefined_function_calls",44,"undefined_functions",44,
                    "locals_not_used",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "exports_not_used",44,"deprecated_function_calls",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "deprecated_functions"],
                   93]],
                 125],
                10,32,32,
                [123,
                 ["xref_queries",44,
                  [91,
                   [[123,
                     ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                      44,10,
                      [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                      "[]"],
                     125]],
                   93]],
                 125],
                10],
               "Run cross reference analysis.","rebar3 xref",[],
               [default],
               default},
           {provider,version,rebar_prv_version,
               {[],[]},
               true,[],"Print version for rebar and current Erlang.",
               "Print version for rebar and current Erlang.","rebar3 version",
               [],
               [default],
               default},
           {provider,upgrade,rebar_prv_upgrade,
               {[],[]},
               true,
               [lock],
               "Upgrade project dependencies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
               "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
               [{package,undefined,undefined,string,
                    "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
               [default],
               default},
           {provider,update,rebar_prv_update,
               {[],[]},
               true,[],"Update package index.","Update package index.",
               "rebar3 update",[],
               [default],
               default},
           {provider,unlock,rebar_prv_unlock,
               {[],[]},
               true,[],
               "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
               "Unlock dependencies.",[],
               [{package,undefined,undefined,string,
                    "List of packages to unlock. If not specified, all dependencies are unlocked."}],
               [default],
               default},
           {provider,tar,rebar_prv_tar,
               {[],[]},
               true,
               [compile],
               "Tar archive of release built of project.",
               "Tar archive of release built of project.","rebar3 tar",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,state,rebar_prv_state,
               {[],[]},
               false,[],"Display rebar configuration for debugging purpose",
               "Print current configuration state","rebar3 state",[],
               [default],
               default},
           {provider,shell,rebar_prv_shell,
               {[],[]},
               true,
               [compile],
               "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
               "Run shell with project apps and deps in path.","rebar3 shell",
               [{config,undefined,"config",string,
                    "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
                {name,undefined,"name",atom,"Gives a long name to the node."},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node."},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed."},
                {script_file,undefined,"script",string,
                    "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
                {apps,undefined,"apps",string,
                    "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."},
                {relname,114,"relname",atom,
                    "Name of the release to use as a template for the shell session"},
                {relvsn,118,"relvsn",string,
                    "Version of the release to use for the shell session"},
                {start_clean,undefined,"start-clean",boolean,
                    "Cancel any applications in the 'apps' list or release."},
                {env_file,undefined,"env-file",string,
                    "Path to file of os environment variables to setup before expanding vars in config files."},
                {user_drv_args,undefined,"user_drv_args",string,
                    "Arguments passed to user_drv start function for creating custom shells."}],
               [default],
               default},
           {provider,repos,rebar_prv_repos,
               {[],[]},
               false,[],
               "Display repository configuration for debugging purpose",
               "Print current package repository configuration",
               "rebar3 repos",[],
               [default],
               default},
           {provider,report,rebar_prv_report,
               {[],[]},
               true,[],
               "Provide a crash report to be sent to the rebar3 issues page.",
               "Provide a crash report to be sent to the rebar3 issues page.",
               "rebar3 report \"<task>\"",
               [{task,undefined,undefined,string,
                    "Task to print details for."}],
               [default],
               default},
           {provider,relup,rebar_prv_relup,
               {[],[]},
               true,
               [release],
               "Create relup of releases.","Create relup of releases.",
               "rebar3 relup",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,release,rebar_prv_release,
               {[],[]},
               true,
               [compile],
               "Build release of project.","Build release of project.",
               "rebar3 release",
               [{all,undefined,"all",boolean,
                    "If true runs the command against all configured  releases"},
                {relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Boolean or path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,upgrade,rebar_prv_plugins_upgrade,
               {[],[]},
               true,[],"List or upgrade plugins","Upgrade plugins",
               "rebar3 plugins upgrade <plugin>",
               [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
               [default],
               plugins},
           {provider,list,rebar_prv_plugins,
               {[],[]},
               true,[],"List local and global plugins for this project",
               "List local and global plugins for this project",
               "rebar3 plugins list",[],
               [default],
               plugins},
           {provider,path,rebar_prv_path,
               {[],[]},
               true,
               [app_discovery],
               "Print paths to build dirs in current profile.",
               "Print paths to build dirs in current profile.","rebar3 path",
               [{app,undefined,"app",string,
                    "Comma separated list of applications to return paths for."},
                {base,undefined,"base",boolean,
                    "Return the `base' path of the current profile."},
                {bin,undefined,"bin",boolean,
                    "Return the `bin' path of the current profile."},
                {ebin,undefined,"ebin",boolean,
                    "Return all `ebin' paths of the current profile's applications."},
                {lib,undefined,"lib",boolean,
                    "Return the `lib' path of the current profile."},
                {priv,undefined,"priv",boolean,
                    "Return the `priv' path of the current profile's applications."},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {src,undefined,"src",boolean,
                    "Return the `src' path of the current profile's applications."},
                {rel,undefined,"rel",boolean,
                    "Return the `rel' path of the current profile."}],
               [default],
               default},
           {provider,pkgs,rebar_prv_packages,
               {[],[]},
               true,[],
               ["List information for a package",46,10],
               "List information for a package.","rebar3 pkgs elli",
               [{package,undefined,undefined,string,
                    "Package to fetch information for."}],
               [default],
               default},
           {provider,new,rebar_prv_new,
               {[],[]},
               true,[],
               "Create rebar3 project based on template and vars.\n\nValid command line options:\n  <template> [var=foo,...]\n\nSee available templates with: `rebar3 new help`\n",
               "Create new project from templates.","rebar3 new <template>",
               [{force,102,"force",undefined,"overwrite existing files"}],
               [default],
               default},
           {provider,lock,rebar_prv_lock,
               {[],[]},
               false,
               [install_deps],
               "Locks dependencies","Locks dependencies.",[],[],
               [default],
               default},
           {provider,upgrade,rebar_prv_local_upgrade,
               {[],[]},
               true,[],[],"Download latest rebar3 escript and extract.",
               "rebar3 unstable upgrade",[],
               [default],
               local},
           {provider,install,rebar_prv_local_install,
               {[],[]},
               true,[],[],
               "Extract libs from rebar3 escript along with a run script.",
               "rebar3 unstable install",[],
               [default],
               local},
           {provider,install_deps,rebar_prv_install_deps,
               {[],[]},
               false,
               [app_discovery],
               [],[],undefined,[],
               [default],
               default},
           {provider,help,rebar_prv_help,
               {[],[]},
               true,[],
               "Display a list of tasks or help for a given task or subtask.",
               "Display a list of tasks or help for a given task or subtask.",
               "rebar3 help <task>",
               [{help_task,undefined,undefined,string,
                    "Task to print help for."}],
               [default],
               default},
           {provider,'get-deps',rebar_prv_get_deps,
               {[],[]},
               true,
               [lock],
               "Fetch project dependencies.","Fetch dependencies.",
               "rebar3 get-deps",[],[],default},
           {provider,eunit,rebar_prv_eunit,
               {[],[]},
               true,
               [lock],
               "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
               [{app,undefined,"app",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {application,undefined,"application",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {cover,99,"cover",boolean,
                    "Generate cover data. Defaults to false."},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {profile,112,"profile",boolean,
                    "Show the slowest tests. Defaults to false."},
                {dir,100,"dir",string,
                    "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
                {file,102,"file",string,
                    "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
                {module,109,"module",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {suite,115,"suite",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {generator,103,"generator",string,
                    "Comma separated list of generators (the format is `module:function`) to load tests from. Equivalent to `[{generator, Module, Function}]`."},
                {verbose,118,"verbose",boolean,
                    "Verbose output. Defaults to false."},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"}],
               [test],
               default},
           {provider,escriptize,rebar_prv_escriptize,
               {[],[]},
               true,
               [compile],
               "Generate an escript executable containing the project's and its dependencies' BEAM files.",
               "Generate escript archive.","rebar3 escriptize",[],
               [default],
               default},
           {provider,edoc,rebar_prv_edoc,
               {[],[]},
               true,
               [compile],
               "Generate documentation using edoc.",
               "Generate documentation using edoc.","rebar3 edoc",[],
               [docs],
               default},
           {provider,do,rebar_prv_do,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence.",
               "Higher order provider for running multiple tasks in a sequence.",
               "rebar3 do <task1>, <task2>, ...",[],
               [default],
               default},
           {provider,dialyzer,rebar_prv_dialyzer,
               {[],[]},
               true,
               [compile],
               "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies or `all_apps` to include all project apps and nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
               "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
               [{update_plt,117,"update-plt",boolean,
                    "Enable updating the PLT. Default: true"},
                {succ_typings,115,"succ-typings",boolean,
                    "Enable success typing analysis. Default: true"},
                {base_plt_location,undefined,"base-plt-location",string,
                    "The location of base PLT file, defaults to $HOME/.cache/rebar3"},
                {plt_location,undefined,"plt-location",string,
                    "The location of the PLT file, defaults to the profile's base directory"},
                {plt_prefix,undefined,"plt-prefix",string,
                    "The prefix to the PLT file, defaults to \"rebar3\""},
                {app,97,"app",string,
                    "Perform success typing analysis of a single application"},
                {base_plt_prefix,undefined,"base-plt-prefix",string,
                    "The prefix to the base PLT file, defaults to \"rebar3\""},
                {statistics,undefined,"statistics",boolean,
                    "Print information about the progress of execution. Default: false"}],
               [default],
               default},
           {provider,tree,rebar_prv_deps_tree,
               {[],[]},
               true,
               [lock],
               [],"Print dependency tree.","rebar3 tree",
               [{verbose,118,"verbose",undefined,
                    "Print repo and branch/tag/ref for git and hg deps"}],
               [default],
               default},
           {provider,deps,rebar_prv_deps,
               {[],[]},
               true,
               [install_deps],
               "List dependencies. Those not matching the config file are followed by an asterisk (*).",
               "List dependencies","rebar3 deps",[],
               [default],
               default},
           {provider,cover,rebar_prv_cover,
               {[],[]},
               true,
               [lock],
               "Perform coverage analysis.","Perform coverage analysis.",
               "rebar3 cover",
               [{reset,114,"reset",boolean,"Reset all coverdata."},
                {verbose,118,"verbose",boolean,"Print coverage analysis."},
                {min_coverage,109,"min_coverage",integer,
                    "Mandate a coverage percentage required to succeed (0..100)"}],
               [test],
               default},
           {provider,compile,rebar_prv_compile,
               {[],[]},
               true,
               [lock],
               "Compile apps .app.src and .erl files.",
               "Compile apps .app.src and .erl files.","rebar3 compile",
               [{deps_only,100,"deps_only",undefined,
                    "Only compile dependencies, no project apps will be built."}],
               [default],
               default},
           {provider,ct,rebar_prv_common_test,
               {[],[]},
               true,
               [lock],
               "Run Common Tests.","Run Common Tests.","rebar3 ct",
               [{dir,undefined,"dir",string,
                    "List of additional directories containing test suites"},
                {suite,undefined,"suite",string,"List of test suites to run"},
                {group,undefined,"group",string,"List of test groups to run"},
                {testcase,undefined,"case",string,"List of test cases to run"},
                {label,undefined,"label",string,"Test label"},
                {config,undefined,"config",string,"List of config files"},
                {spec,undefined,"spec",string,"List of test specifications"},
                {join_specs,undefined,"join_specs",boolean,
                    "Merge all test specifications and perform a single test run"},
                {allow_user_terms,undefined,"allow_user_terms",boolean,
                    "Allow user defined config values in config files"},
                {logdir,undefined,"logdir",string,"Log folder"},
                {logopts,undefined,"logopts",string,
                    "Options for common test logging"},
                {verbosity,undefined,"verbosity",integer,"Verbosity"},
                {cover,99,"cover",{boolean,false},"Generate cover data"},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {repeat,undefined,"repeat",integer,
                    "How often to repeat tests"},
                {duration,undefined,"duration",string,
                    "Max runtime (format: HHMMSS)"},
                {until,undefined,"until",string,"Run until (format: HHMMSS)"},
                {force_stop,undefined,"force_stop",string,
                    "Force stop on test timeout (true | false | skip_rest)"},
                {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
                {stylesheet,undefined,"stylesheet",string,
                    "CSS stylesheet to apply to html output"},
                {decrypt_key,undefined,"decrypt_key",string,
                    "Path to key for decrypting config"},
                {decrypt_file,undefined,"decrypt_file",string,
                    "Path to file containing key for decrypting config"},
                {abort_if_missing_suites,undefined,"abort_if_missing_suites",
                    {boolean,true},
                    "Abort if suites are missing"},
                {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
                {scale_timetraps,undefined,"scale_timetraps",boolean,
                    "Scale timetraps"},
                {create_priv_dir,undefined,"create_priv_dir",string,
                    "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
                {include,undefined,"include",string,
                    "Directories containing additional include files"},
                {readable,undefined,"readable",string,
                    "Shows test case names and only displays logs to shell on failures (true | compact | false)"},
                {verbose,118,"verbose",boolean,"Verbose output"},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"},
                {sys_config,undefined,"sys_config",string,
                    "List of application config files"},
                {compile_only,undefined,"compile_only",boolean,
                    "Compile modules in the project with the test configuration but do not run the tests"},
                {retry,undefined,"retry",boolean,
                    "Experimental feature. If any specification for previously failing test is found, runs them."},
                {fail_fast,undefined,"fail_fast",
                    {boolean,false},
                    "Experimental feature. If any test fails, the run is aborted. Since common test does not support this natively, we abort the rebar3 run on a failure. This May break CT's disk logging and other rebar3 features."}],
               [test],
               default},
           {provider,clean,rebar_prv_clean,
               {[],[]},
               true,
               [app_discovery,install_deps],
               "Remove compiled beam files from apps.",
               "Remove compiled beam files from apps.","rebar3 clean",
               [{all,97,"all",undefined,"Clean all apps include deps"},
                {apps,undefined,"apps",string,
                    "Clean a specific list of apps or dependencies"},
                {profile,112,"profile",string,
                    "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
               [default],
               default},
           {provider,compile,rebar_prv_bare_compile,
               {[],[]},
               false,
               [{default,app_discovery}],
               [],[],[],
               [{paths,112,"paths",string,
                    "Wildcard paths of ebin directories to add to code path, separated by a colon"},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {outdir,111,"outdir",string,
                    "Path where build artifacts are located. Defaults to the current directory."}],
               [default],
               bare},
           {provider,as,rebar_prv_as,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
               [{profile,undefined,undefined,string,"Profiles to run as."}],
               [default],
               default},
           {provider,app_discovery,rebar_prv_app_discovery,
               {[],[]},
               false,[],[],[],[],[],
               [default],
               default},
           {provider,format,rebar3_format_prv,
               {[],[]},
               true,
               [app_discovery],
               [],"A rebar plugin for code formatting","rebar3 format",
               [{files,102,"files",string,
                    "List of files and directories to be formatted"},
                {verify,118,"verify",boolean,"Just verify, don't format"},
                {output,111,"output",string,
                    "Output directory for the formatted files"}],
               [default],
               default}],
          false}],
     [{file,
          "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez_prv.erl"},
      {line,60}]},
 {rebar3_ez_prv,do,1,
     [{file,
          "/Users/admin/proj/erlang/rebar3_ez/_build/test/lib/rebar3_ez/test/ez_example/_build/default/plugins/rebar3_ez/src/rebar3_ez_prv.erl"},
      {line,46}]},
 {rebar_core,do,2,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_core.erl"},{line,155}]},
 {rebar_hooks,run_provider_hooks_,6,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_hooks.erl"},{line,65}]},
 {rebar_hooks,run_all_hooks,6,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_hooks.erl"},{line,18}]},
 {rebar_prv_compile,'-compile/4-lc$^0/1-0-',3,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_prv_compile.erl"},
      {line,151}]},
 {rebar_prv_compile,compile,4,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_prv_compile.erl"},
      {line,151}]},
 {rebar_prv_compile,handle_project_apps,2,
     [{file,"/home/runner/work/rebar3/rebar3/src/rebar_prv_compile.erl"},
      {line,70}]}]
[0m[0;32m===> When submitting a bug report, please include the output of `rebar3 report "your command"`
[0m
[0;32m.[0m
Finished in 1.071 seconds
[0;32m1 tests, 0 failures
[0m